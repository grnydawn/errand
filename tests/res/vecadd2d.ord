
# turn on/off a section
control = True

# the input and output variables are renamed
# from a, b, and c to x, y, and z

#[signature: x, y -> z]

[cuda, hip@enable=control]

	// NROW teams are interpreted to Cuca/Hip blocks
	// NCOL gofers are interpreted to Cuca/Hip threads

	int row = blockIdx.x;
	int col = threadIdx.x;

	// the input and output variables keep the convinience of numpy

	if (row < a.shape(0) && col < a.shape(1) )
		c(row, col) = a(row, col) + b(row, col);

[pthread]

    int row = a.unravel_index(ERRAND_GOFER_ID, 0);
    int col = a.unravel_index(ERRAND_GOFER_ID, 1);

	if (row < a.shape(0) && col < a.shape(1) ) {
		c(row, col) = a(row, col) + b(row, col);
	}

[openacc-c++]

	#pragma acc loop gang
	for (int row = 0; row < a.shape(0); row++) {
		#pragma acc loop worker
		for (int col = 0; col < a.shape(1); col++) {
			c(row, col) = a(row, col) + b(row, col);
		}
	}

[c++]

	for (int row = 0; row < a.shape(0); row++) {
		for (int col = 0; col < a.shape(1); col++) {
			c(row, col) = a(row, col) + b(row, col);
		}
	}

[fortran]

    INTEGER row, col

    DO row=1, a_%shape(1)
        DO col=1, a_%shape(2)
			c(row, col) = a(row, col) + b(row, col);
			!c(col, row) = a(col, row) + b(col, row);
        END DO
    END DO
